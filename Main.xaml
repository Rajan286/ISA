<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1322.4,2941.6" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd2="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.PDF</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Vision.OmniPage.Core</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntegrationService.Activities.Runtime</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Vision.OmniPage.Core</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="713.6,2876.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="EladenText" />
      <Variable x:TypeArguments="x:String" Name="EladenDauer" />
      <Variable x:TypeArguments="x:String" Name="tankstelleName" />
      <Variable x:TypeArguments="x:String" Name="tankstelleAdresse" />
      <Variable x:TypeArguments="x:String" Name="tankDatum" />
      <Variable x:TypeArguments="x:String" Name="tankUhrzeit" />
      <Variable x:TypeArguments="x:String" Name="kraftstoffArt" />
      <Variable x:TypeArguments="x:String" Name="literGetankt" />
      <Variable x:TypeArguments="x:String" Name="preisProLiter" />
      <Variable x:TypeArguments="x:String" Name="tankBrutto" />
      <Variable x:TypeArguments="x:String" Name="tankNetto" />
      <Variable x:TypeArguments="x:String" Name="ladeDatum" />
      <Variable x:TypeArguments="x:String" Name="ladeUhrzeitStart" />
      <Variable x:TypeArguments="x:String" Name="ladeUhrzeitEnde" />
      <Variable x:TypeArguments="x:String" Name="ladeAdresse" />
      <Variable x:TypeArguments="x:String" Name="kWhGeladen" />
      <Variable x:TypeArguments="x:String" Name="preisProKWh" />
      <Variable x:TypeArguments="x:String" Name="ladeNetto" />
      <Variable x:TypeArguments="x:String" Name="ladeBrutto" />
      <Variable x:TypeArguments="x:String" Name="ladeDauer" />
      <Variable x:TypeArguments="x:String" Name="rechnungsTyp" />
      <Variable x:TypeArguments="x:String" Name="fehlertext" />
      <Variable x:TypeArguments="x:String" Name="eintragGueltig" />
      <Variable x:TypeArguments="x:String" Name="tankGrundgebühr" />
      <Variable x:TypeArguments="x:String" Name="ladeNettoGrundgebühr" />
      <Variable x:TypeArguments="x:String" Name="ladeBruttoGrundgebühr" />
      <Variable x:TypeArguments="x:String" Name="Ladekosten" />
      <Variable x:TypeArguments="x:String" Name="KmAnzeige" />
      <Variable x:TypeArguments="x:String" Name="tankKostenGesamt" />
      <Variable x:TypeArguments="x:String" Name="TankKmAnzahlKennzeichen" />
      <Variable x:TypeArguments="x:String" Name="TankKennzeichen" />
      <Variable x:TypeArguments="x:String" Name="Waschkarte" />
      <Variable x:TypeArguments="x:String" Name="WaschkostenGesamt" />
      <Variable x:TypeArguments="x:String" Name="WaschDatum" />
      <Variable x:TypeArguments="sd:DataTable" Name="belegTabelle" />
      <Variable x:TypeArguments="x:String" Name="ocrText" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="spaltenMapping" />
      <Variable x:TypeArguments="s:String[]" Name="spaltenListe" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="651.2,180" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sd:DataTable">[belegTabelle]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sd:DataTable">[New DataTable]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:String[]">[spaltenListe]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:String[]" xml:space="preserve">[{
  "tankstelleName",
  "tankstelleAdresse",
  "tankDatum",
  "tankUhrzeit",
  "kraftstoffArt",
  "literGetankt",
  "preisProLiter",
  "tankBrutto",
  "ladeDatum",
  "ladeUhrzeitStart",
  "ladeUhrzeitEnde",
  "kWhGeladen",
  "preisProKWh",
  "ladeDauer",
  "tankKostenGesamt",
  "TankKmAnzahlKennzeichen",
  "TankKennzeichen",
  "Waschkarte",
  "WaschkostenGesamt"
}]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[spaltenMapping]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" xml:space="preserve">[New Dictionary(Of String, String) From {
  {"tankstelleName", "Tankstelle"},
  {"tankstelleAdresse", "Adresse"},
  {"tankDatum", "Tankdatum"},
  {"tankUhrzeit", "Tankzeit"},
  {"kraftstoffArt", "Kraftstoff"},
  {"literGetankt", "Liter"},
  {"preisProLiter", "Preis/Liter"},
  {"tankBrutto", "Tank Brutto"},
  {"ladeDatum", "Ladedatum"},
  {"ladeUhrzeitStart", "Startzeit"},
  {"ladeUhrzeitEnde", "Endzeit"},
  {"kWhGeladen", "kWh"},
  {"preisProKWh", "Preis/kWh"},
  {"ladeDauer", "Ladedauer"},
  {"tankKostenGesamt", "Kosten"},
  {"TankKmAnzahlKennzeichen", "KM"},
  {"TankKennzeichen", "Kennzeichen"},
  {"Waschkarte", "Waschkarte"},
  {"WaschkostenGesamt", "Waschkosten"}
}]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="651.2,465.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[spaltenListe]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="spaltenName" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Hauptteil" sap:VirtualizedContainerService.HintSize="377.6,277.6" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="[spaltenMapping(spaltenName)]" DataTable="[belegTabelle]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="334.4,188" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:ForEachFileX DisplayName="For Each File In Folder" Folder="C:\Users\rajan\Documents\UiPath\FuelAndElectricityAutomation\Eingabe" sap:VirtualizedContainerService.HintSize="651.2,1883.2" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
      <ui:ForEachFileX.Body>
        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
          <ActivityAction.Argument1>
            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
          </ActivityAction.Argument1>
          <ActivityAction.Argument2>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
          </ActivityAction.Argument2>
          <Sequence DisplayName="Ausführen" sap:VirtualizedContainerService.HintSize="617.6,1620" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[Path.GetExtension(CurrentFile.FullName).ToLower = &quot;.pdf&quot;]" sap:VirtualizedContainerService.HintSize="555.2,1280" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="521.6,1096.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ReadPDFWithOCR DegreeOfParallelism="-1" DisplayName="Read PDF With OCR" FileName="[CurrentFile.FullName]" sap:VirtualizedContainerService.HintSize="478.4,157.6" sap2010:WorkflowViewState.IdRef="ReadPDFWithOCR_1" ImageDpi="150" Range="All" Text="[ocrText]">
                    <ui:ReadPDFWithOCR.OCREngine>
                      <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd2:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <uoa:OmniPageOCR Output="{x:Null}" PredictionId="{x:Null}" Profile="{x:Null}" BundleType="Basic" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractHandprintedText="True" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="OmniPageOCR_2" Image="[Image]" Language="deu" NoopExecution="False" Scale="2" Text="[ocrText]" />
                      </ActivityFunc>
                    </ui:ReadPDFWithOCR.OCREngine>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ReadPDFWithOCR>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="478.4,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[ocrText]" />
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,679.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[tankstelleName]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[If(Regex.IsMatch(ocrText, "Aral", RegexOptions.IgnoreCase), "Aral",
If(Regex.IsMatch(ocrText, "HEM", RegexOptions.IgnoreCase), "HEM",
If(Regex.IsMatch(ocrText, "ENBW", RegexOptions.IgnoreCase), "ENBW",
If(Regex.IsMatch(ocrText, "Total", RegexOptions.IgnoreCase), "Total", "Unbekannt"))))]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[tankstelleAdresse]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "Adresse.{0,20}([A-ZÄÖÜa-zäöüß\s]+\d+[a-zA-Z]*)", RegexOptions.IgnoreCase).Groups(1).Value.Trim()]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[tankDatum]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "\b\d{2}[./-]\d{2}[./-]\d{4}\b").Value]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[tankUhrzeit]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "\b\d{2}:\d{2}\b").Value]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[kraftstoffArt]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "(Diesel|Super|E10|E5)", RegexOptions.IgnoreCase).Value]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_36">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[literGetankt]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "(\d{1,3}[.,]\d{1,3})\s*L", RegexOptions.IgnoreCase).Groups(1).Value.Replace(",", ".")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[preisProLiter]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "(\d{1,2}[.,]\d{2})\s*€/L", RegexOptions.IgnoreCase).Groups(1).Value.Replace(",", ".")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[tankBrutto]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "(Gesamt|Summe|Kosten)[^\d]{0,15}(\d{1,4}[.,]\d{2})\s*€", RegexOptions.IgnoreCase).Groups(2).Value.Replace(",", ".")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_49">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[ladeDatum]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "\b\d{2}[./-]\d{2}[./-]\d{4}\b").Value]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[ladeUhrzeitStart]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "Startzeit.{0,15}(\d{2}:\d{2})", RegexOptions.IgnoreCase).Groups(1).Value]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[ladeUhrzeitEnde]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "Endzeit.{0,15}(\d{2}:\d{2})", RegexOptions.IgnoreCase).Groups(1).Value]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[kWhGeladen]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "(\d{1,3}[.,]\d{1,2})\s*kWh", RegexOptions.IgnoreCase).Groups(1).Value.Replace(",", ".")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[preisProKWh]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "(\d{1,2}[.,]\d{2})\s*ct/kWh", RegexOptions.IgnoreCase).Groups(1).Value.Replace(",", ".")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_43">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[ladeDauer]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "Dauer.{0,10}(\d{1,2}:\d{2})", RegexOptions.IgnoreCase).Groups(1).Value]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_44">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[tankKostenGesamt]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "(Gesamt|Kosten)[^\d]{0,10}(\d{1,4}[.,]\d{2})\s*€", RegexOptions.IgnoreCase).Groups(2).Value.Replace(",", ".")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[TankKmAnzahlKennzeichen]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "(\d{4,6})\s*km", RegexOptions.IgnoreCase).Groups(1).Value]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[TankKennzeichen]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "\b([A-Z]{1,3}-[A-Z]{1,2}\s\d{1,4})\b", RegexOptions.IgnoreCase).Groups(1).Value]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_47">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[Waschkarte]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[If(Regex.IsMatch(ocrText, "Waschkarte", RegexOptions.IgnoreCase), "Ja", "Nein")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[WaschkostenGesamt]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Regex.Match(ocrText, "(Wasch.*?(\d{1,3}[.,]\d{2}))\s*€", RegexOptions.IgnoreCase).Groups(2).Value.Replace(",", ".")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4" />
              </If.Else>
            </If>
            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&#xD;&#xA;  tankstelleName, tankstelleAdresse, tankDatum, tankUhrzeit,&#xD;&#xA;  kraftstoffArt, literGetankt, preisProLiter, tankBrutto,&#xD;&#xA;  ladeDatum, ladeUhrzeitStart, ladeUhrzeitEnde,&#xD;&#xA;  kWhGeladen, preisProKWh, ladeDauer,&#xD;&#xA;  tankKostenGesamt, TankKmAnzahlKennzeichen, TankKennzeichen,&#xD;&#xA;  Waschkarte, WaschkostenGesamt&#xD;&#xA;}]" DataTable="[belegTabelle]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="555.2,188" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
          </Sequence>
        </ActivityAction>
      </ui:ForEachFileX.Body>
    </ui:ForEachFileX>
    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[belegTabelle]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="651.2,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Belege" WorkbookPath="[Path.Combine(Environment.CurrentDirectory, &quot;Ausgabe&quot;, &quot;Belege.xlsx&quot;)]" />
  </Sequence>
</Activity>